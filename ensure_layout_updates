diff --git a/ui/orc-ds.c b/ui/orc-ds.c
index 4f04a46..ca5946d 100644
--- a/ui/orc-ds.c
+++ b/ui/orc-ds.c
@@ -33,7 +33,10 @@
 
 backend_state be_state;
 
+#define DEBUG_GEOM 1
+#ifdef DEBUG_GEOM
 mouse_geometry_t localGeom[N_MONITORS];
+#endif
 
 extern int xen_domid;
 
@@ -137,6 +140,8 @@ static int orc_ds_map_shm(DisplayState *ds)
 
         fs->attached = TRUE;
 
+        be_state.dirty_layout = TRUE;
+
         qemu_log("%s: Displaying %p using the DisplayServer\n",
                  __func__, ds_get_data(ds));
 
@@ -192,6 +197,7 @@ static int orc_ds_map_foreign(DisplayState *ds)
                          xen_domid,
                          qemu_ram_addr_from_host_nofail(ds_get_data(ds)));
     fs->attached = TRUE;
+    be_state.dirty_layout = TRUE;
 
     ret = 1;
 
@@ -262,6 +268,8 @@ do_remove_display(DisplayState *ds)
     fs->x_origin = 0;
     fs->y_origin = 0;
 
+    be_state.dirty_layout = TRUE;
+
     fs->attached = FALSE;
 }
 
@@ -442,6 +450,7 @@ static int orc_ds_add_display_cb(NxBackend *be, void *closure, int display_id,
     ds->display_type = DT_ORC;
     fs->server_display_id = display_id;
 
+#if 0
     /*
      * For an initial mapping set origin to -1,-1
      * so the display server knows to not process
@@ -456,24 +465,15 @@ static int orc_ds_add_display_cb(NxBackend *be, void *closure, int display_id,
      */
     fs->x_origin = -1;
     fs->y_origin = -1;
-
-    orc_ds_setup_shm(ds);
-
-#if 0    /* For debugging */
-    if (be_state.ms_shared_control) {
-        mouse_geometry_t *geom = be_state.ms_shared_control->geom;
-        mouse_geometry_t lgeom[N_MONITORS] __attribute__ ((unused));
-        int i = 0;
-	for (i = 0; i < N_MONITORS; i++) {
-            lgeom[i] = geom[i];
-        }
-        i++;
-    }
 #endif
 
     fs->x_origin = geometry->x;
     fs->y_origin = geometry->y;
 
+    be_state.dirty_layout = TRUE;
+
+    orc_ds_setup_shm(ds);
+
     /* Make a copy of the EDID data. */
     fs->edid_size = MIN(edid_size, EDID_SIZE);
     memcpy(&fs->edid[0], edid, fs->edid_size);
@@ -714,15 +714,10 @@ static void orc_ds_resize(DisplayState *ds)
 
 static void orc_ds_check_layout(DisplayState *ds)
 {
-    OrcDsState *fs = (OrcDsState *)ds->opaque;
-
     if (be_state.ms_shared_control) {
-        int index;
         uint32_t geometry_sequence;
         mouse_geometry_t *geom = be_state.ms_shared_control->geom;
 
-        index = ds->display_id;
-
         geometry_sequence = be_state.ms_shared_control->geometry_sequence;
 
         /* Has the position changed? */
@@ -738,7 +733,7 @@ static void orc_ds_check_layout(DisplayState *ds)
              * so it's visible in gdb.  Change this when we
              * support more monitors.
              */
-#if 1    /* For debugging */
+#ifdef DEBUG_GEOM    /* For debugging */
             int i = 0;
             for (i = 0; i < N_MONITORS; i++) {
                 localGeom[i] = geom[i];
@@ -748,9 +743,6 @@ static void orc_ds_check_layout(DisplayState *ds)
             /* Yes, save the new information */
             be_state.geometry_sequence = geometry_sequence;
 
-            fs->x_origin = geom[index].x;
-            fs->y_origin = geom[index].y;
-
             /* Put together a new NxLayout to send to the display server */
             for (tds = get_displaystate(); tds; tds = tds->next) {
                 OrcDsState *tfs = (OrcDsState *)tds->opaque;
@@ -759,6 +751,10 @@ static void orc_ds_check_layout(DisplayState *ds)
 
                     geom = &be_state.ms_shared_control->geom[tds->display_id];
 
+                    tfs->x_origin = geom->x;
+                    tfs->y_origin = geom->y;
+                    be_state.dirty_layout = TRUE;
+
                     layouts[nLayouts].dispId      = tfs->server_display_id;
                     layouts[nLayouts].geom.x      = geom->x;
                     layouts[nLayouts].geom.y      = geom->y;
@@ -773,7 +769,8 @@ static void orc_ds_check_layout(DisplayState *ds)
             if (nLayouts > 0) {
 
                 /* Make sure the layout has actually changed */
-                if (nLayouts != be_state.n_last_layouts ||
+                if (be_state.dirty_layout ||
+                    nLayouts != be_state.n_last_layouts ||
                     memcmp(be_state.last_layouts, layouts, 
                            nLayouts * sizeof(NxLayout)) != 0) {
 
@@ -798,6 +795,7 @@ static void orc_ds_check_layout(DisplayState *ds)
                            nLayouts * sizeof(NxLayout));
 
                     be_state.n_last_layouts = nLayouts;
+                    be_state.dirty_layout = FALSE;
                 }
             }
         }
diff --git a/ui/orc-ds.h b/ui/orc-ds.h
index a088065..eb23fd3 100644
--- a/ui/orc-ds.h
+++ b/ui/orc-ds.h
@@ -72,6 +72,7 @@ typedef struct backend_state {
     uint32_t geometry_sequence;
     NxLayout last_layouts[N_MONITORS];
     uint32_t n_last_layouts;
+    bool     dirty_layout;
 
     /* Mouse state */
     pv_state_t        pv_state;
