diff --git a/hw/acpi_piix4.c b/hw/acpi_piix4.c
index c56220b..f16a7db 100644
--- a/hw/acpi_piix4.c
+++ b/hw/acpi_piix4.c
@@ -192,6 +192,8 @@ static void pm_io_space_update(PIIX4PMState *s)
 {
     uint32_t pm_io_base;
 
+    PIIX4_DPRINTF("PM: %s: dev.confg[0x80] = %x\n", __FUNCTION__, s->dev.config[0x80]);
+
     if (s->dev.config[0x80] & 1) {
         pm_io_base = le32_to_cpu(*(uint32_t *)(s->dev.config + 0x40));
         pm_io_base &= 0xffc0;
@@ -206,6 +208,9 @@ static void pm_io_space_update(PIIX4PMState *s)
 static void pm_write_config(PCIDevice *d,
                             uint32_t address, uint32_t val, int len)
 {
+
+    PIIX4_DPRINTF("PM: %s: addr = %x, val = %x\n", __FUNCTION__, address, val);
+
     pci_default_write_config(d, address, val, len);
     if (range_covers_byte(address, len, 0x80))
         pm_io_space_update((PIIX4PMState *)d);
@@ -352,7 +357,9 @@ static void piix4_reset(void *opaque)
     pci_conf[0x5a] = 0;
     pci_conf[0x5b] = 0;
 
-    pci_conf[0x40] = 0x01; /* PM io base read only bit */
+    if (!xen_enabled()) {
+        pci_conf[0x40] = 0x01; /* PM io base read only bit */
+    }
     pci_conf[0x80] = 0;
 
     if (s->kvm_enabled) {
@@ -394,6 +401,10 @@ static int piix4_pm_initfn(PCIDevice *dev)
     pci_conf[0x09] = 0x00;
     pci_conf[0x3d] = 0x01; // interrupt pin 1
 
+    if (xen_enabled()) {
+        acpi_pm1_cnt_write(&s->ar, 0x1, ~0);
+    }
+
     /* APM */
     apm_init(&s->apm, apm_ctrl_changed, s);
 
