diff --git a/xen-all.c b/xen-all.c
index 290013c..258f8e2 100644
--- a/xen-all.c
+++ b/xen-all.c
@@ -37,7 +37,8 @@
     do { } while (0)
 #endif
 
-static MemoryRegion ram_memory, ram_640k, ram_lo, ram_hi;
+#define RAM_HI_START (HVM_BELOW_4G_RAM_END + HVM_BELOW_4G_MMIO_LENGTH)
+static MemoryRegion ram_memory, ram_hi_memory, ram_640k, ram_lo, ram_hi;
 static MemoryRegion *framebuffer;
 static bool xen_in_migration;
 
@@ -207,7 +208,7 @@ static void xen_ram_init(ram_addr_t ram_size)
         /* Xen does not allocate the memory continuously, and keep a hole at
          * HVM_BELOW_4G_MMIO_START of HVM_BELOW_4G_MMIO_LENGTH
          */
-        block_len += HVM_BELOW_4G_MMIO_LENGTH;
+        block_len = HVM_BELOW_4G_RAM_END;
     }
     memory_region_init_ram(&ram_memory, "xen.ram", block_len);
     vmstate_register_ram_global(&ram_memory);
@@ -232,10 +233,11 @@ static void xen_ram_init(ram_addr_t ram_size)
                              &ram_memory, 0xc0000, below_4g_mem_size - 0xc0000);
     memory_region_add_subregion(sysmem, 0xc0000, &ram_lo);
     if (above_4g_mem_size > 0) {
-        memory_region_init_alias(&ram_hi, "xen.ram.hi",
-                                 &ram_memory, 0x100000000ULL,
-                                 above_4g_mem_size);
-        memory_region_add_subregion(sysmem, 0x100000000ULL, &ram_hi);
+        memory_region_init_ram_phys(&ram_hi_memory, NULL, "xen.ram64",
+				    above_4g_mem_size, RAM_HI_START);
+        memory_region_init_alias(&ram_hi, "ram-above-4g", &ram_hi_memory,
+                                 0, above_4g_mem_size);
+        memory_region_add_subregion(sysmem, RAM_HI_START, &ram_hi);
     }
 }
 
@@ -253,7 +255,7 @@ void xen_ram_alloc(ram_addr_t ram_addr, ram_addr_t size, MemoryRegion *mr)
         return;
     }
 
-    if (mr == &ram_memory) {
+    if (mr == &ram_memory || mr == &ram_hi_memory) {
         return;
     }
 
