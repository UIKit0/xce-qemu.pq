diff --git a/console.h b/console.h
index 2fbb1cc..0717960 100644
--- a/console.h
+++ b/console.h
@@ -117,6 +117,8 @@ struct PixelFormat {
     uint8_t rshift, gshift, bshift, ashift;
     uint8_t rmax, gmax, bmax, amax;
     uint8_t rbits, gbits, bbits, abits;
+    uint32_t paletted;
+    uint8_t palette[768];
 };
 
 struct DisplaySurface {
diff --git a/hw/vga.c b/hw/vga.c
index 17854a9..f16f199 100644
--- a/hw/vga.c
+++ b/hw/vga.c
@@ -53,6 +53,8 @@
  * Standard VGA features and Bochs VBE extensions are implemented.
  */
 
+extern const char *vnc_display;
+
 /* force some bits to zero */
 const uint8_t sr_mask[8] = {
     0x03,
@@ -1689,6 +1691,13 @@ void vga_dirty_log_stop(VGACommonState *s)
 /*
  * graphic modes
  */
+
+static void _copy_palette(DisplaySurface *s, uint8_t *p)
+{
+                s->pf.paletted = 1;
+                memcpy(s->pf.palette, p, 768);
+}
+
 static void vga_draw_graphic(VGACommonState *s, int full_update)
 {
     int y1, y, update, linesize, y_start, double_scan, mask, depth;
@@ -1741,14 +1750,17 @@ static void vga_draw_graphic(VGACommonState *s, int full_update)
         height != s->last_height ||
         s->last_depth != depth) {
 #if defined(HOST_WORDS_BIGENDIAN) == defined(TARGET_WORDS_BIGENDIAN)
-        if (depth == 16 || depth == 32) {
+       if ((!vnc_display && depth >= 8) || (depth > 8))
 #else
-        if (depth == 32) {
+       if (depth == 32)
 #endif
+       {
             qemu_free_displaysurface(s->ds);
             s->ds->surface = qemu_create_displaysurface_from(disp_width, height, depth,
                     s->line_offset,
                     s->vram_ptr + (s->start_addr * 4));
+            if (depth == 8)
+                _copy_palette(s->ds->surface, s->palette);
 #if defined(HOST_WORDS_BIGENDIAN) != defined(TARGET_WORDS_BIGENDIAN)
             s->ds->surface->pf = qemu_different_endianness_pixelformat(depth);
 #endif
@@ -1764,7 +1776,7 @@ static void vga_draw_graphic(VGACommonState *s, int full_update)
         s->last_depth = depth;
         full_update = 1;
     } else if (is_buffer_shared(s->ds->surface) &&
-               (full_update || ds_get_data(s->ds) != s->vram_ptr
+               (ds_get_data(s->ds) != s->vram_ptr
                 + (s->start_addr * 4))) {
         qemu_free_displaysurface(s->ds);
         s->ds->surface = qemu_create_displaysurface_from(disp_width,
