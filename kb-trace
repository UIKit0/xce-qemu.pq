diff --git a/hw/pckbd.c b/hw/pckbd.c
index 69857ba..56ad1af 100644
--- a/hw/pckbd.c
+++ b/hw/pckbd.c
@@ -26,6 +26,7 @@
 #include "pc.h"
 #include "ps2.h"
 #include "sysemu.h"
+#include "orc_debug.h"
 
 /* debug PC keyboard */
 //#define DEBUG_KBD
@@ -227,7 +228,7 @@ static void kbd_write_command(void *opaque, uint32_t addr, uint32_t val)
 {
     KBDState *s = opaque;
 
-    DPRINTF("kbd: write cmd=0x%02x\n", val);
+    DPRINT(OF_DEBUG_KB, "write cmd=0x%02x\n", val);
 
     /* Bits 3-0 of the output port P2 of the keyboard controller may be pulsed
      * low for approximately 6 micro seconds. Bits 3-0 of the KBD_CCMD_PULSE
@@ -318,7 +319,7 @@ static uint32_t kbd_read_data(void *opaque, uint32_t addr)
     else
         val = ps2_read_data(s->kbd);
 
-    DPRINTF("kbd: read data=0x%02x\n", val);
+    DPRINT(OF_DEBUG_KB, "read data=0x%02x\n", val);
     return val;
 }
 
@@ -326,7 +327,7 @@ static void kbd_write_data(void *opaque, uint32_t addr, uint32_t val)
 {
     KBDState *s = opaque;
 
-    DPRINTF("kbd: write data=0x%02x\n", val);
+    DPRINT(OF_DEBUG_KB, "write data=0x%02x\n", val);
 
     switch(s->write_cmd) {
     case 0:
@@ -360,6 +361,8 @@ static void kbd_reset(void *opaque)
 {
     KBDState *s = opaque;
 
+    DPRINT(OF_DEBUG_KB, "reset\n");
+
     s->mode = KBD_MODE_KBD_INT | KBD_MODE_MOUSE_INT;
     s->status = KBD_STAT_CMD | KBD_STAT_UNLOCKED;
     s->outport = KBD_OUT_RESET | KBD_OUT_A20;
diff --git a/hw/ps2.c b/hw/ps2.c
index f93cd24..cf4ca14 100644
--- a/hw/ps2.c
+++ b/hw/ps2.c
@@ -25,7 +25,7 @@
 #include "ps2.h"
 #include "console.h"
 #include "sysemu.h"
-
+#include "orc_debug.h"
 /* debug PC keyboard */
 //#define DEBUG_KBD
 
@@ -139,6 +139,9 @@ void ps2_queue(void *opaque, int b)
 
     if (q->count >= PS2_QUEUE_SIZE)
         return;
+
+    DPRINT(OF_DEBUG_KB, "0x%02x\n", b);
+
     q->data[q->wptr] = b;
     if (++q->wptr == PS2_QUEUE_SIZE)
         q->wptr = 0;
@@ -167,6 +170,7 @@ static void ps2_put_keycode(void *opaque, int keycode)
             keycode = ps2_raw_keycode_set3[keycode & 0x7f];
         }
       }
+
     ps2_queue(&s->common, keycode);
 }
 
@@ -215,6 +219,8 @@ void ps2_write_keyboard(void *opaque, int val)
 {
     PS2KbdState *s = (PS2KbdState *)opaque;
 
+    DPRINT(OF_DEBUG_KB, "command %x, val 0x%02x\n", s->common.write_cmd, val);
+
     switch(s->common.write_cmd) {
     default:
     case -1:
@@ -301,6 +307,7 @@ void ps2_write_keyboard(void *opaque, int val)
 void ps2_keyboard_set_translation(void *opaque, int mode)
 {
     PS2KbdState *s = (PS2KbdState *)opaque;
+    DPRINT(OF_DEBUG_KB, "mode set to %d\n", mode);
     s->translate = mode;
 }
 
